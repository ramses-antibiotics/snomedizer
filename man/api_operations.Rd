% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rest-api.R
\name{api_operations}
\alias{api_operations}
\alias{api_find_concept}
\alias{api_find_concepts}
\title{SNOMED CT Terminology Server REST API operations}
\usage{
api_find_concept(
  conceptId,
  endpoint = snomedizer_options_get("endpoint"),
  branch = snomedizer_options_get("branch"),
  accept_language = snomedizer_options_get("language"),
  catch404 = TRUE
)

api_find_concepts(
  term = NULL,
  conceptIds = NULL,
  activeFilter = NULL,
  endpoint = snomedizer_options_get("endpoint"),
  branch = snomedizer_options_get("branch"),
  limit = snomedizer_options_get("limit"),
  accept_language = snomedizer_options_get("language"),
  offset = 0,
  catch404 = TRUE,
  ...
)
}
\arguments{
\item{conceptId}{a string}

\item{endpoint}{the URL of a SNOMED CT Terminology Server REST API endpoint.
See \code{\link{snomedizer_options}}.}

\item{branch}{a string for the name of the API endpoint branch to use (most
commonly \code{"MAIN"}). See \code{\link{snomedizer_options}}.}

\item{accept_language}{a string specifying acceptable result languages}

\item{catch404}{whether to display a warning if the API operation returns a
'404 Not Found' status. Default is `TRUE`.}

\item{term}{character vector of terms to search}

\item{conceptIds}{a character vector of SNOMED-CT concept ids (for example:
\code{c("233604007", "68566005")})}

\item{activeFilter}{optional boolean: \itemize{
    \item `TRUE` returns only active terminology
    \item `FALSE` returns only inactive terminology
    \item `NULL` (the default) returns both active and inactive terminology
}}

\item{limit}{integer for the maximum number of results to return.
See \code{\link{snomedizer_options}}.}

\item{offset}{an integer indicating the number of results to skip}

\item{...}{other REST API parameters}
}
\value{
An `httr` \code{\link[httr]{response}()} object.
}
\description{
Low-level wrapper functions based on \link{httr} for interfacing
with the operations built in the \href{https://github.com/IHTSDO/snowstorm}{Snowstorm API}
}
\examples{
# look up the pneumonia concept
api_find_concept(conceptId = "233604007")
api_find_concepts(term = "pneumonia")
api_find_concepts(conceptIds = c("233604007", "68566005"))
}
